{"version":3,"file":"issues-list.min.js","sources":["../src/issues-list.js"],"sourcesContent":["// This file is part of the tool_certificate plugin for Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module used when viewing the list of issued certificates\n *\n * @module     tool_certificate/issues-list\n * @copyright  2019 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Notification from 'core/notification';\nimport {get_strings as getStrings, get_string as getString} from 'core/str';\nimport Ajax from 'core/ajax';\nimport ModalForm from 'tool_certificate/modal_form';\nimport Toast from 'core/toast';\nimport {refreshTableContent, getFilters, setFilters} from 'core_table/dynamic';\nimport * as DynamicTableSelectors from 'core_table/local/dynamic/selectors';\n\nconst SELECTORS = {\n    ADDISSUE: \"[data-element='addbutton']\",\n    REGENERATEFILE: \"[data-action='regenerate']\",\n    REVOKEISSUE: \"[data-action='revoke']\",\n    GROUPFORM: \".groupselector form\",\n    GROUPSELECTOR: \"select[name='group']\"\n};\n\n/**\n * Add issue dialogue\n * @param {Element} element\n */\nconst addIssue = function(element) {\n    var modal = new ModalForm({\n        formClass: 'tool_certificate\\\\form\\\\certificate_issues',\n        args: {tid: element.dataset.tid},\n        modalConfig: {title: getString('issuecertificates', 'tool_certificate'), scrollable: false},\n        saveButtonText: getString('save'),\n        triggerElement: element,\n    });\n    modal.onSubmitSuccess = function(data) {\n        data = parseInt(data, 10);\n        if (data) {\n            getStrings([\n                {key: 'oneissuewascreated', component: 'tool_certificate'},\n                {key: 'aissueswerecreated', component: 'tool_certificate', param: data}\n            ]).done(function(s) {\n                var str = data > 1 ? s[1] : s[0];\n                Toast.add(str);\n            });\n            reloadReport();\n        } else {\n            getString('noissueswerecreated', 'tool_certificate')\n                .done(function(s) {\n                    Toast.add(s);\n                });\n        }\n    };\n};\n\n/**\n * Revoke issue\n * @param {Element} element\n */\nconst revokeIssue = function(element) {\n    getStrings([\n        {key: 'confirm', component: 'moodle'},\n        {key: 'revokecertificateconfirm', component: 'tool_certificate'},\n        {key: 'revoke', component: 'tool_certificate'},\n        {key: 'cancel', component: 'moodle'}\n    ]).done(function(s) {\n        Notification.confirm(s[0], s[1], s[2], s[3], function() {\n            var promises = Ajax.call([\n                {methodname: 'tool_certificate_revoke_issue',\n                    args: {id: element.dataset.id}}\n            ]);\n            promises[0].done(function() {\n                reloadReport();\n            }).fail(Notification.exception);\n        });\n    }).fail(Notification.exception);\n};\n\n/**\n * Revoke issue\n * @param {Element} element\n */\nconst regenerateIssueFile = function(element) {\n    getStrings([\n        {key: 'confirm', component: 'moodle'},\n        {key: 'regeneratefileconfirm', component: 'tool_certificate'},\n        {key: 'regenerate', component: 'tool_certificate'},\n        {key: 'cancel', component: 'moodle'}\n    ]).done(function(s) {\n        Notification.confirm(s[0], s[1], s[2], s[3], function() {\n            var promises = Ajax.call([\n                {methodname: 'tool_certificate_regenerate_issue_file',\n                    args: {id: element.dataset.id}}\n            ]);\n            promises[0].done(function() {\n                reloadReport();\n            }).fail(Notification.exception);\n        });\n    }).fail(Notification.exception);\n};\n\n/**\n * Reload report\n */\nvar reloadReport = function() {\n    const report = document.querySelector(DynamicTableSelectors.main.region);\n    refreshTableContent(report).catch(Notification.exception);\n};\n\n/**\n * Change group and refresh table\n * @param {Event} e\n */\nconst changeGroup = function(e) {\n    const report = document.querySelector(DynamicTableSelectors.main.region);\n    let filters = getFilters(report);\n    let params = JSON.parse(filters.filters.parameters.values[0]);\n    params.groupid = e.target.value;\n    filters.filters.parameters.values[0] = JSON.stringify(params);\n    setFilters(report, filters);\n};\n\n/**\n * Init page\n */\nexport function init() {\n    document.addEventListener('click', event => {\n\n        // Add issue.\n        const addIssueElement = event.target.closest(SELECTORS.ADDISSUE);\n        if (addIssueElement) {\n            event.preventDefault();\n            addIssue(addIssueElement);\n        }\n\n        // Revoke issue.\n        const revokeIssueElement = event.target.closest(SELECTORS.REVOKEISSUE);\n        if (revokeIssueElement) {\n            event.preventDefault();\n            revokeIssue(revokeIssueElement);\n        }\n\n        // Regenerate file.\n        const regenerateFileElement = event.target.closest(SELECTORS.REGENERATEFILE);\n        if (regenerateFileElement) {\n            event.preventDefault();\n            regenerateIssueFile(regenerateFileElement);\n        }\n    });\n\n    const groupform = document.querySelector(SELECTORS.GROUPFORM);\n    if (groupform) {\n        // Flush existing event listeners.\n        const node = groupform.cloneNode(true);\n        groupform.replaceWith(node);\n        // Add event handler.\n        node.querySelector(SELECTORS.GROUPSELECTOR).addEventListener('change', changeGroup);\n    }\n}\n"],"names":["document","addEventListener","event","addIssueElement","target","closest","SELECTORS","element","preventDefault","ModalForm","formClass","args","tid","dataset","modalConfig","title","scrollable","saveButtonText","triggerElement","onSubmitSuccess","data","parseInt","key","component","param","done","s","str","add","reloadReport","revokeIssueElement","confirm","Ajax","call","methodname","id","fail","Notification","exception","revokeIssue","regenerateFileElement","regenerateIssueFile","groupform","querySelector","node","cloneNode","replaceWith","changeGroup","report","DynamicTableSelectors","main","region","catch","e","filters","params","JSON","parse","parameters","values","groupid","value","stringify"],"mappings":";;;;;;;sFA8IIA,SAASC,iBAAiB,SAASC,cAGzBC,gBAAkBD,MAAME,OAAOC,QAAQC,oBAtGpC,IAASC,QAuGdJ,kBACAD,MAAMM,iBAxGQD,QAyGLJ,gBAxGL,IAAIM,oBAAU,CACtBC,UAAW,6CACXC,KAAM,CAACC,IAAKL,QAAQM,QAAQD,KAC5BE,YAAa,CAACC,OAAO,mBAAU,oBAAqB,oBAAqBC,YAAY,GACrFC,gBAAgB,mBAAU,QAC1BC,eAAgBX,UAEdY,gBAAkB,SAASC,OAC7BA,KAAOC,SAASD,KAAM,2BAEP,CACP,CAACE,IAAK,qBAAsBC,UAAW,oBACvC,CAACD,IAAK,qBAAsBC,UAAW,mBAAoBC,MAAOJ,QACnEK,MAAK,SAASC,OACTC,IAAMP,KAAO,EAAIM,EAAE,GAAKA,EAAE,kBACxBE,IAAID,QAEdE,oCAEU,sBAAuB,oBAC5BJ,MAAK,SAASC,kBACLE,IAAIF,cAuFhBI,mBAAqB5B,MAAME,OAAOC,QAAQC,uBAC5CwB,qBACA5B,MAAMM,iBA/EE,SAASD,8BACd,CACP,CAACe,IAAK,UAAWC,UAAW,UAC5B,CAACD,IAAK,2BAA4BC,UAAW,oBAC7C,CAACD,IAAK,SAAUC,UAAW,oBAC3B,CAACD,IAAK,SAAUC,UAAW,YAC5BE,MAAK,SAASC,yBACAK,QAAQL,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAAI,WAC1BM,cAAKC,KAAK,CACrB,CAACC,WAAY,gCACTvB,KAAM,CAACwB,GAAI5B,QAAQM,QAAQsB,OAE1B,GAAGV,MAAK,WACbI,kBACDO,KAAKC,sBAAaC,iBAE1BF,KAAKC,sBAAaC,WAgEbC,CAAYT,2BAIVU,sBAAwBtC,MAAME,OAAOC,QAAQC,0BAC/CkC,wBACAtC,MAAMM,iBA/DU,SAASD,8BACtB,CACP,CAACe,IAAK,UAAWC,UAAW,UAC5B,CAACD,IAAK,wBAAyBC,UAAW,oBAC1C,CAACD,IAAK,aAAcC,UAAW,oBAC/B,CAACD,IAAK,SAAUC,UAAW,YAC5BE,MAAK,SAASC,yBACAK,QAAQL,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAAI,WAC1BM,cAAKC,KAAK,CACrB,CAACC,WAAY,yCACTvB,KAAM,CAACwB,GAAI5B,QAAQM,QAAQsB,OAE1B,GAAGV,MAAK,WACbI,kBACDO,KAAKC,sBAAaC,iBAE1BF,KAAKC,sBAAaC,WAgDbG,CAAoBD,iCAItBE,UAAY1C,SAAS2C,cAAcrC,wBACrCoC,UAAW,OAELE,KAAOF,UAAUG,WAAU,GACjCH,UAAUI,YAAYF,MAEtBA,KAAKD,cAAcrC,yBAAyBL,iBAAiB,SAAU8C,63BA7IzEzC,mBACQ,6BADRA,yBAEc,6BAFdA,sBAGW,yBAHXA,oBAIS,sBAJTA,wBAKa,2BAoFfuB,aAAe,iBACTmB,OAAShD,SAAS2C,cAAcM,sBAAsBC,KAAKC,yCAC7CH,QAAQI,MAAMf,sBAAaC,kBAO7CS,YAAc,SAASM,SACnBL,OAAShD,SAAS2C,cAAcM,sBAAsBC,KAAKC,YAC7DG,SAAU,uBAAWN,QACrBO,OAASC,KAAKC,MAAMH,QAAQA,QAAQI,WAAWC,OAAO,IAC1DJ,OAAOK,QAAUP,EAAEjD,OAAOyD,MAC1BP,QAAQA,QAAQI,WAAWC,OAAO,GAAKH,KAAKM,UAAUP,gCAC3CP,OAAQM"}